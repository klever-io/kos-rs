

// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!



#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
	// We also try to prevent mixing versions of shared uniffi header structs.
	// If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V6
	#ifndef UNIFFI_SHARED_HEADER_V6
		#error Combining helper code from multiple versions of uniffi is not supported
	#endif // ndef UNIFFI_SHARED_HEADER_V6
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V6
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V6 in this file.           ⚠️

typedef struct RustBuffer {
	uint64_t capacity;
	uint64_t len;
	uint8_t *data;
} RustBuffer;

typedef struct ForeignBytes {
	int32_t len;
	const uint8_t *data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
	int8_t code;
	RustBuffer errorBuf;
} RustCallStatus;

#endif // UNIFFI_SHARED_H


#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t data, int8_t poll_result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiRustFutureContinuationCallback(
				UniffiRustFutureContinuationCallback cb, uint64_t data, int8_t poll_result)
{
	return cb(data, poll_result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureFree(
				UniffiForeignFutureFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceFree(
				UniffiCallbackInterfaceFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t callback_data, UniffiForeignFutureStructU8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU8(
				UniffiForeignFutureCompleteU8 cb, uint64_t callback_data, UniffiForeignFutureStructU8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t callback_data, UniffiForeignFutureStructI8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI8(
				UniffiForeignFutureCompleteI8 cb, uint64_t callback_data, UniffiForeignFutureStructI8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t callback_data, UniffiForeignFutureStructU16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU16(
				UniffiForeignFutureCompleteU16 cb, uint64_t callback_data, UniffiForeignFutureStructU16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t callback_data, UniffiForeignFutureStructI16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI16(
				UniffiForeignFutureCompleteI16 cb, uint64_t callback_data, UniffiForeignFutureStructI16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t callback_data, UniffiForeignFutureStructU32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU32(
				UniffiForeignFutureCompleteU32 cb, uint64_t callback_data, UniffiForeignFutureStructU32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t callback_data, UniffiForeignFutureStructI32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI32(
				UniffiForeignFutureCompleteI32 cb, uint64_t callback_data, UniffiForeignFutureStructI32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t callback_data, UniffiForeignFutureStructU64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU64(
				UniffiForeignFutureCompleteU64 cb, uint64_t callback_data, UniffiForeignFutureStructU64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t callback_data, UniffiForeignFutureStructI64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI64(
				UniffiForeignFutureCompleteI64 cb, uint64_t callback_data, UniffiForeignFutureStructI64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t callback_data, UniffiForeignFutureStructF32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF32(
				UniffiForeignFutureCompleteF32 cb, uint64_t callback_data, UniffiForeignFutureStructF32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t callback_data, UniffiForeignFutureStructF64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF64(
				UniffiForeignFutureCompleteF64 cb, uint64_t callback_data, UniffiForeignFutureStructF64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void* returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t callback_data, UniffiForeignFutureStructPointer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompletePointer(
				UniffiForeignFutureCompletePointer cb, uint64_t callback_data, UniffiForeignFutureStructPointer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t callback_data, UniffiForeignFutureStructRustBuffer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteRustBuffer(
				UniffiForeignFutureCompleteRustBuffer cb, uint64_t callback_data, UniffiForeignFutureStructRustBuffer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t callback_data, UniffiForeignFutureStructVoid result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteVoid(
				UniffiForeignFutureCompleteVoid cb, uint64_t callback_data, UniffiForeignFutureStructVoid result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_ABSOLUTE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_ABSOLUTE
RustBuffer uniffi_kos_mobile_fn_func_big_number_absolute(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_ADD
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_ADD
RustBuffer uniffi_kos_mobile_fn_func_big_number_add(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_DECREMENT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_DECREMENT
RustBuffer uniffi_kos_mobile_fn_func_big_number_decrement(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_DIVIDE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_DIVIDE
RustBuffer uniffi_kos_mobile_fn_func_big_number_divide(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_INCREMENT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_INCREMENT
RustBuffer uniffi_kos_mobile_fn_func_big_number_increment(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_EQUAL
int8_t uniffi_kos_mobile_fn_func_big_number_is_equal(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_GT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_GT
int8_t uniffi_kos_mobile_fn_func_big_number_is_gt(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_GTE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_GTE
int8_t uniffi_kos_mobile_fn_func_big_number_is_gte(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_LT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_LT
int8_t uniffi_kos_mobile_fn_func_big_number_is_lt(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_LTE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_LTE
int8_t uniffi_kos_mobile_fn_func_big_number_is_lte(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_NEGATIVE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_NEGATIVE
int8_t uniffi_kos_mobile_fn_func_big_number_is_negative(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_POSITIVE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_POSITIVE
int8_t uniffi_kos_mobile_fn_func_big_number_is_positive(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_ZERO
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_IS_ZERO
int8_t uniffi_kos_mobile_fn_func_big_number_is_zero(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_MULTIPLY
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_MULTIPLY
RustBuffer uniffi_kos_mobile_fn_func_big_number_multiply(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_NEW
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_NEW
RustBuffer uniffi_kos_mobile_fn_func_big_number_new(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_NEW_ZERO
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_NEW_ZERO
RustBuffer uniffi_kos_mobile_fn_func_big_number_new_zero(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_POW
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_POW
RustBuffer uniffi_kos_mobile_fn_func_big_number_pow(RustBuffer base, RustBuffer exponent, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_STRING
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_STRING
RustBuffer uniffi_kos_mobile_fn_func_big_number_string(RustBuffer value, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_SUBTRACT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_BIG_NUMBER_SUBTRACT
RustBuffer uniffi_kos_mobile_fn_func_big_number_subtract(RustBuffer lhs, RustBuffer rhs, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_DECRYPT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_DECRYPT
RustBuffer uniffi_kos_mobile_fn_func_decrypt(RustBuffer data, RustBuffer password, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_DERIVE_XPUB
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_DERIVE_XPUB
RustBuffer uniffi_kos_mobile_fn_func_derive_xpub(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustBuffer derivation_path, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ECIES_DECRYPT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ECIES_DECRYPT
RustBuffer uniffi_kos_mobile_fn_func_ecies_decrypt(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustBuffer msg, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ECIES_ENCRYPT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ECIES_ENCRYPT
RustBuffer uniffi_kos_mobile_fn_func_ecies_encrypt(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustBuffer msg, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ENCRYPT_WITH_CBC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ENCRYPT_WITH_CBC
RustBuffer uniffi_kos_mobile_fn_func_encrypt_with_cbc(RustBuffer data, RustBuffer password, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ENCRYPT_WITH_CFB
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ENCRYPT_WITH_CFB
RustBuffer uniffi_kos_mobile_fn_func_encrypt_with_cfb(RustBuffer data, RustBuffer password, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ENCRYPT_WITH_GCM
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_ENCRYPT_WITH_GCM
RustBuffer uniffi_kos_mobile_fn_func_encrypt_with_gcm(RustBuffer data, RustBuffer password, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_MNEMONIC
RustBuffer uniffi_kos_mobile_fn_func_generate_mnemonic(int32_t size, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_WALLET_FROM_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_WALLET_FROM_MNEMONIC
RustBuffer uniffi_kos_mobile_fn_func_generate_wallet_from_mnemonic(RustBuffer mnemonic, uint32_t chain_id, uint32_t index, int8_t use_legacy_path, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_WALLET_FROM_PRIVATE_KEY
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_WALLET_FROM_PRIVATE_KEY
RustBuffer uniffi_kos_mobile_fn_func_generate_wallet_from_private_key(uint32_t chain_id, RustBuffer private_key, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_XPUB
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GENERATE_XPUB
RustBuffer uniffi_kos_mobile_fn_func_generate_xpub(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GET_PATH_BY_CHAIN
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GET_PATH_BY_CHAIN
RustBuffer uniffi_kos_mobile_fn_func_get_path_by_chain(uint32_t chain_id, uint32_t index, int8_t use_legacy_path, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GET_SUPPORTED_CHAINS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GET_SUPPORTED_CHAINS
RustBuffer uniffi_kos_mobile_fn_func_get_supported_chains(RustCallStatus *out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GET_XPUB_AS_STRING
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_GET_XPUB_AS_STRING
RustBuffer uniffi_kos_mobile_fn_func_get_xpub_as_string(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_HMAC_SHA256
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_HMAC_SHA256
RustBuffer uniffi_kos_mobile_fn_func_hmac_sha256(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustBuffer derivation_path, RustBuffer msg, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_IS_CHAIN_SUPPORTED
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_IS_CHAIN_SUPPORTED
int8_t uniffi_kos_mobile_fn_func_is_chain_supported(uint32_t chain_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_BITCOIN_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_BITCOIN_TRANSACTION_OPTIONS
RustBuffer uniffi_kos_mobile_fn_func_new_bitcoin_transaction_options(RustBuffer input_amounts, RustBuffer prev_scripts, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_COSMOS_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_COSMOS_TRANSACTION_OPTIONS
RustBuffer uniffi_kos_mobile_fn_func_new_cosmos_transaction_options(RustBuffer chain_id, uint64_t account_number, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_EVM_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_EVM_TRANSACTION_OPTIONS
RustBuffer uniffi_kos_mobile_fn_func_new_evm_transaction_options(uint32_t chain_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_SUBSTRATE_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_NEW_SUBSTRATE_TRANSACTION_OPTIONS
RustBuffer uniffi_kos_mobile_fn_func_new_substrate_transaction_options(RustBuffer call, RustBuffer era, uint32_t nonce, uint8_t tip, RustBuffer block_hash, RustBuffer genesis_hash, uint32_t spec_version, uint32_t transaction_version, RustBuffer app_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_ECDSA
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_ECDSA
RustBuffer uniffi_kos_mobile_fn_func_sign_ecdsa(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustBuffer msg, RustBuffer derivation_path, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_ECDSA_RECOVERABLE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_ECDSA_RECOVERABLE
RustBuffer uniffi_kos_mobile_fn_func_sign_ecdsa_recoverable(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustBuffer msg, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_MESSAGE
RustBuffer uniffi_kos_mobile_fn_func_sign_message(RustBuffer account, RustBuffer hex, int8_t legacy, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SIGN_TRANSACTION
RustBuffer uniffi_kos_mobile_fn_func_sign_transaction(RustBuffer account, RustBuffer raw, RustBuffer options, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SLIP77_MASTER_BLINDING_KEY
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_SLIP77_MASTER_BLINDING_KEY
RustBuffer uniffi_kos_mobile_fn_func_slip77_master_blinding_key(RustBuffer mnemonic, RustBuffer passphrase, int8_t is_mainnet, uint32_t index, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_VALIDATE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_FN_FUNC_VALIDATE_MNEMONIC
int8_t uniffi_kos_mobile_fn_func_validate_mnemonic(RustBuffer mnemonic, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_ALLOC
RustBuffer ffi_kos_mobile_rustbuffer_alloc(uint64_t size, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_kos_mobile_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_FREE
void ffi_kos_mobile_rustbuffer_free(RustBuffer buf, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUSTBUFFER_RESERVE
RustBuffer ffi_kos_mobile_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U8
void ffi_kos_mobile_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U8
void ffi_kos_mobile_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U8
void ffi_kos_mobile_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_kos_mobile_rust_future_complete_u8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I8
void ffi_kos_mobile_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I8
void ffi_kos_mobile_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I8
void ffi_kos_mobile_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I8
int8_t ffi_kos_mobile_rust_future_complete_i8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U16
void ffi_kos_mobile_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U16
void ffi_kos_mobile_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U16
void ffi_kos_mobile_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_kos_mobile_rust_future_complete_u16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I16
void ffi_kos_mobile_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I16
void ffi_kos_mobile_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I16
void ffi_kos_mobile_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I16
int16_t ffi_kos_mobile_rust_future_complete_i16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U32
void ffi_kos_mobile_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U32
void ffi_kos_mobile_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U32
void ffi_kos_mobile_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_kos_mobile_rust_future_complete_u32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I32
void ffi_kos_mobile_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I32
void ffi_kos_mobile_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I32
void ffi_kos_mobile_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I32
int32_t ffi_kos_mobile_rust_future_complete_i32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_U64
void ffi_kos_mobile_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_U64
void ffi_kos_mobile_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_U64
void ffi_kos_mobile_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_kos_mobile_rust_future_complete_u64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_I64
void ffi_kos_mobile_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_I64
void ffi_kos_mobile_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_I64
void ffi_kos_mobile_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_I64
int64_t ffi_kos_mobile_rust_future_complete_i64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_F32
void ffi_kos_mobile_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_F32
void ffi_kos_mobile_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_F32
void ffi_kos_mobile_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_F32
float ffi_kos_mobile_rust_future_complete_f32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_F64
void ffi_kos_mobile_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_F64
void ffi_kos_mobile_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_F64
void ffi_kos_mobile_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_F64
double ffi_kos_mobile_rust_future_complete_f64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_POINTER
void ffi_kos_mobile_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_POINTER
void ffi_kos_mobile_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_POINTER
void ffi_kos_mobile_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_POINTER
void* ffi_kos_mobile_rust_future_complete_pointer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_kos_mobile_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_kos_mobile_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_kos_mobile_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_kos_mobile_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_POLL_VOID
void ffi_kos_mobile_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_CANCEL_VOID
void ffi_kos_mobile_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_FREE_VOID
void ffi_kos_mobile_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_RUST_FUTURE_COMPLETE_VOID
void ffi_kos_mobile_rust_future_complete_void(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_ABSOLUTE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_ABSOLUTE
uint16_t uniffi_kos_mobile_checksum_func_big_number_absolute(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_ADD
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_ADD
uint16_t uniffi_kos_mobile_checksum_func_big_number_add(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_DECREMENT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_DECREMENT
uint16_t uniffi_kos_mobile_checksum_func_big_number_decrement(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_DIVIDE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_DIVIDE
uint16_t uniffi_kos_mobile_checksum_func_big_number_divide(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_INCREMENT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_INCREMENT
uint16_t uniffi_kos_mobile_checksum_func_big_number_increment(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_EQUAL
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_EQUAL
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_equal(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_GT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_GT
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_gt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_GTE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_GTE
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_gte(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_LT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_LT
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_lt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_LTE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_LTE
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_lte(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_NEGATIVE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_NEGATIVE
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_negative(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_POSITIVE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_POSITIVE
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_positive(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_ZERO
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_IS_ZERO
uint16_t uniffi_kos_mobile_checksum_func_big_number_is_zero(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_MULTIPLY
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_MULTIPLY
uint16_t uniffi_kos_mobile_checksum_func_big_number_multiply(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_NEW
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_NEW
uint16_t uniffi_kos_mobile_checksum_func_big_number_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_NEW_ZERO
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_NEW_ZERO
uint16_t uniffi_kos_mobile_checksum_func_big_number_new_zero(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_POW
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_POW
uint16_t uniffi_kos_mobile_checksum_func_big_number_pow(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_STRING
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_STRING
uint16_t uniffi_kos_mobile_checksum_func_big_number_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_SUBTRACT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_BIG_NUMBER_SUBTRACT
uint16_t uniffi_kos_mobile_checksum_func_big_number_subtract(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_DECRYPT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_DECRYPT
uint16_t uniffi_kos_mobile_checksum_func_decrypt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_DERIVE_XPUB
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_DERIVE_XPUB
uint16_t uniffi_kos_mobile_checksum_func_derive_xpub(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ECIES_DECRYPT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ECIES_DECRYPT
uint16_t uniffi_kos_mobile_checksum_func_ecies_decrypt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ECIES_ENCRYPT
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ECIES_ENCRYPT
uint16_t uniffi_kos_mobile_checksum_func_ecies_encrypt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ENCRYPT_WITH_CBC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ENCRYPT_WITH_CBC
uint16_t uniffi_kos_mobile_checksum_func_encrypt_with_cbc(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ENCRYPT_WITH_CFB
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ENCRYPT_WITH_CFB
uint16_t uniffi_kos_mobile_checksum_func_encrypt_with_cfb(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ENCRYPT_WITH_GCM
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_ENCRYPT_WITH_GCM
uint16_t uniffi_kos_mobile_checksum_func_encrypt_with_gcm(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_MNEMONIC
uint16_t uniffi_kos_mobile_checksum_func_generate_mnemonic(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_WALLET_FROM_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_WALLET_FROM_MNEMONIC
uint16_t uniffi_kos_mobile_checksum_func_generate_wallet_from_mnemonic(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_WALLET_FROM_PRIVATE_KEY
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_WALLET_FROM_PRIVATE_KEY
uint16_t uniffi_kos_mobile_checksum_func_generate_wallet_from_private_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_XPUB
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GENERATE_XPUB
uint16_t uniffi_kos_mobile_checksum_func_generate_xpub(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GET_PATH_BY_CHAIN
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GET_PATH_BY_CHAIN
uint16_t uniffi_kos_mobile_checksum_func_get_path_by_chain(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GET_SUPPORTED_CHAINS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GET_SUPPORTED_CHAINS
uint16_t uniffi_kos_mobile_checksum_func_get_supported_chains(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GET_XPUB_AS_STRING
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_GET_XPUB_AS_STRING
uint16_t uniffi_kos_mobile_checksum_func_get_xpub_as_string(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_HMAC_SHA256
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_HMAC_SHA256
uint16_t uniffi_kos_mobile_checksum_func_hmac_sha256(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_IS_CHAIN_SUPPORTED
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_IS_CHAIN_SUPPORTED
uint16_t uniffi_kos_mobile_checksum_func_is_chain_supported(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_BITCOIN_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_BITCOIN_TRANSACTION_OPTIONS
uint16_t uniffi_kos_mobile_checksum_func_new_bitcoin_transaction_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_COSMOS_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_COSMOS_TRANSACTION_OPTIONS
uint16_t uniffi_kos_mobile_checksum_func_new_cosmos_transaction_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_EVM_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_EVM_TRANSACTION_OPTIONS
uint16_t uniffi_kos_mobile_checksum_func_new_evm_transaction_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_SUBSTRATE_TRANSACTION_OPTIONS
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_NEW_SUBSTRATE_TRANSACTION_OPTIONS
uint16_t uniffi_kos_mobile_checksum_func_new_substrate_transaction_options(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_ECDSA
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_ECDSA
uint16_t uniffi_kos_mobile_checksum_func_sign_ecdsa(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_ECDSA_RECOVERABLE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_ECDSA_RECOVERABLE
uint16_t uniffi_kos_mobile_checksum_func_sign_ecdsa_recoverable(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_MESSAGE
uint16_t uniffi_kos_mobile_checksum_func_sign_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_TRANSACTION
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SIGN_TRANSACTION
uint16_t uniffi_kos_mobile_checksum_func_sign_transaction(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SLIP77_MASTER_BLINDING_KEY
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_SLIP77_MASTER_BLINDING_KEY
uint16_t uniffi_kos_mobile_checksum_func_slip77_master_blinding_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_VALIDATE_MNEMONIC
#define UNIFFI_FFIDEF_UNIFFI_KOS_MOBILE_CHECKSUM_FUNC_VALIDATE_MNEMONIC
uint16_t uniffi_kos_mobile_checksum_func_validate_mnemonic(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_KOS_MOBILE_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_KOS_MOBILE_UNIFFI_CONTRACT_VERSION
uint32_t ffi_kos_mobile_uniffi_contract_version(void
    
);
#endif

