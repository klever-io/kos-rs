name: KOS-RS Checks

on:
  push:
    branches:
      - develop
      - master
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      - '.github/**'
  pull_request:
    branches:
      - develop
      - master
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      - '.github/**'
      - 'packages/kos-go/kos_mobile/lib/**'

jobs:
  format:
    runs-on: ubuntu-latest
    env:
      USER: ${{ secrets.GIT_USER }}
      TOKEN: ${{ secrets.GIT_PASS }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: RustUp
        uses: klever-io/kos-rs/.github/actions/rustup@develop
        with:
          with_cache: true

      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings

      - name: checks
        run: |
          cargo deny check
          cargo pants


      - name: Run Tests
        run: cargo test --workspace --exclude kos-hardware

  build:
    needs: [ format ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: RustUp
        uses: klever-io/kos-rs/.github/actions/rustup@develop
        with:
          with_cache: true

      - name: Build
        run: make webpack-npm

  build-go-linux:
    needs: [ format ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
 
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: RustUp
        uses: klever-io/kos-rs/.github/actions/rustup@develop
        with:
          with_cache: true

      - name: Build Linux Go bindings
        run: make build-go

      - name: Copy .so to Go package
        run: |
          mkdir -p packages/kos-go/kos_mobile/lib/linux-amd64
          cp target/release/libkos_mobile.so packages/kos-go/kos_mobile/lib/linux-amd64/

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update Linux Go bindings library"
          file_pattern: "packages/kos-go/kos_mobile/lib/linux-amd64/libkos_mobile.so"

      - name: Run Go tests
        run: |
          cd packages/kos-go
          make test

  build-go-mac:
    needs: [ format ]
    runs-on: [ "macos-14" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Rust toolchain
        shell: bash
        run: |
          set -e
          rustup component add --toolchain stable rustfmt clippy
          rustup default stable

      - name: Setup protobuf
        run: brew install protobuf

      - name: Build Mac Go bindings
        run: make build-go

      - name: Copy dylib to Go package
        run: |
          mkdir -p packages/kos-go/kos_mobile/lib/darwin-aarch64
          cp target/release/libkos_mobile.dylib packages/kos-go/kos_mobile/lib/darwin-aarch64/

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update macOS Go bindings library"
          file_pattern: "packages/kos-go/kos_mobile/lib/darwin-aarch64/libkos_mobile.dylib"

      - name: Run Go tests
        run: |
          cd packages/kos-go
          make test
